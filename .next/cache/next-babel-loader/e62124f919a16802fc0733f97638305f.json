{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { debounce } from 'lodash';\n\n/**\n * @usage\n * import { useBreakpoint } from '@hooks/useBreakpoint';\n * const { xs, sm, md, lg, xl, xxl, smAndUp, lgAndDown } = useBreakpoint();\n * style={{ width: xs ? '100%' : '50%' }}\n * xs is a reactively changing boolean that evaluates to true if the current breakpoint is xs\n*/\n\n/**\n * @typedef {\"smAndDown\" | \"smAndUp\" | \"mdAndDown\" | \"mdAndUp\" | \"lgAndDown\" | \"lgAndUp\"} BreakpointHelper\n*/\n\n/**\n * @typedef {\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | BreakpointHelper} Breakpoint\n*/\n\n/**\n * @type {Record<Breakpoint, number>}\n * @description enum for the different breakpoint sizes\n * @example BreakpointSize.xs === 576\n */\nexport var BreakpointSize = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1440,\n  xxl: 9999\n};\n\n/**\n * @type {Record<Breakpoint, string>}\n * @description enum for the different breakpoints\n * @example Breakpoint.xs === 'xs'\n */\nexport var Breakpoint = {\n  // base props\n  xs: 'xs',\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  xxl: 'xxl',\n  // helper props\n  smAndDown: 'smAndDown',\n  smAndUp: 'smAndUp',\n  mdAndDown: 'mdAndDown',\n  mdAndUp: 'mdAndUp',\n  lgAndDown: 'lgAndDown',\n  lgAndUp: 'lgAndUp'\n};\n\n/**\n * @type {Record<BreakpointHelper, Breakpoint => boolean>}\n * @description maps helper props to their respective predicates\n */\nexport var breakpointHelpers = {\n  smAndDown: function smAndDown(size) {\n    return size === Breakpoint.xs || size === Breakpoint.sm;\n  },\n  smAndUp: function smAndUp(size) {\n    return size !== Breakpoint.xs;\n  },\n  mdAndDown: function mdAndDown(size) {\n    return size === Breakpoint.xs || size === Breakpoint.sm || size === Breakpoint.md;\n  },\n  mdAndUp: function mdAndUp(size) {\n    return size !== Breakpoint.xs && size !== Breakpoint.sm;\n  },\n  lgAndDown: function lgAndDown(size) {\n    return size === Breakpoint.xl || size === Breakpoint.xxl;\n  },\n  lgAndUp: function lgAndUp(size) {\n    return size !== Breakpoint.xl && size !== Breakpoint.xxl;\n  }\n};\n\n/**\n * @param {number} width\n * @returns {Breakpoint}\n */\nvar resolveBreakpoint = function resolveBreakpoint(width) {\n  var breakpoints = Object.entries(BreakpointSize);\n  var _breakpoints$find = breakpoints.find(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        _ = _ref2[0],\n        value = _ref2[1];\n      return width < value;\n    }),\n    _breakpoints$find2 = _slicedToArray(_breakpoints$find, 1),\n    breakpoint = _breakpoints$find2[0];\n  return breakpoint;\n};\n\n/**\n * @returns {Breakpoint}\n */\nexport var useBreakpoint = function useBreakpoint() {\n  // for ssr\n  if (false) {\n    return Breakpoint.xxl;\n  }\n  var _useState = useState(function () {\n      return resolveBreakpoint(window.innerWidth);\n    }),\n    size = _useState[0],\n    setSize = _useState[1];\n  var setBreakpoint = function setBreakpoint() {\n    return setSize(resolveBreakpoint(window.innerWidth));\n  };\n  useEffect(function () {\n    var calcInnerWidth = debounce(setBreakpoint, 200);\n    window.addEventListener('resize', calcInnerWidth);\n    return function () {\n      return window.removeEventListener('resize', calcInnerWidth);\n    };\n  }, []);\n  return new Proxy(Breakpoint, {\n    get: function get(target, prop) {\n      if (!(prop in target)) throw new Error(\"Invalid breakpoint: \".concat(prop));\n      return prop in breakpointHelpers ? breakpointHelpers[prop](size) : size === prop;\n    }\n  });\n};","map":{"version":3,"names":["useState","useEffect","debounce","BreakpointSize","xs","sm","md","lg","xl","xxl","Breakpoint","smAndDown","smAndUp","mdAndDown","mdAndUp","lgAndDown","lgAndUp","breakpointHelpers","size","resolveBreakpoint","width","breakpoints","Object","entries","_breakpoints$find","find","_ref","_ref2","_slicedToArray","_","value","_breakpoints$find2","breakpoint","useBreakpoint","_useState","window","innerWidth","setSize","setBreakpoint","calcInnerWidth","addEventListener","removeEventListener","Proxy","get","target","prop","Error","concat"],"sources":["/Users/BraedenTurner/UMass/BUILD_UMass/BUILD-Website/src/hooks/useBreakpoint.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { debounce } from 'lodash';\n\n/**\n * @usage\n * import { useBreakpoint } from '@hooks/useBreakpoint';\n * const { xs, sm, md, lg, xl, xxl, smAndUp, lgAndDown } = useBreakpoint();\n * style={{ width: xs ? '100%' : '50%' }}\n * xs is a reactively changing boolean that evaluates to true if the current breakpoint is xs\n*/\n\n/**\n * @typedef {\"smAndDown\" | \"smAndUp\" | \"mdAndDown\" | \"mdAndUp\" | \"lgAndDown\" | \"lgAndUp\"} BreakpointHelper\n*/\n\n/**\n * @typedef {\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | BreakpointHelper} Breakpoint\n*/\n\n/**\n * @type {Record<Breakpoint, number>}\n * @description enum for the different breakpoint sizes\n * @example BreakpointSize.xs === 576\n */\nexport const BreakpointSize = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1440,\n  xxl: 9999,\n};\n\n/**\n * @type {Record<Breakpoint, string>}\n * @description enum for the different breakpoints\n * @example Breakpoint.xs === 'xs'\n */\nexport const Breakpoint = {\n\n  // base props\n  xs: 'xs',\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  xxl: 'xxl',\n\n  // helper props\n  smAndDown: 'smAndDown',\n  smAndUp: 'smAndUp',\n  mdAndDown: 'mdAndDown',\n  mdAndUp: 'mdAndUp',\n  lgAndDown: 'lgAndDown',\n  lgAndUp: 'lgAndUp',\n};\n\n/**\n * @type {Record<BreakpointHelper, Breakpoint => boolean>}\n * @description maps helper props to their respective predicates\n */\nexport const breakpointHelpers = {\n  smAndDown: (size) => size === Breakpoint.xs || size === Breakpoint.sm,\n  smAndUp: (size) => size !== Breakpoint.xs,\n  mdAndDown: (size) => size === Breakpoint.xs || size === Breakpoint.sm || size === Breakpoint.md,\n  mdAndUp: (size) => size !== Breakpoint.xs && size !== Breakpoint.sm,\n  lgAndDown: (size) => size === Breakpoint.xl || size === Breakpoint.xxl,\n  lgAndUp: (size) => size !== Breakpoint.xl && size !== Breakpoint.xxl,\n}\n\n/**\n * @param {number} width\n * @returns {Breakpoint}\n */\nconst resolveBreakpoint = (width) => {\n  const breakpoints = Object.entries(BreakpointSize);\n  const [breakpoint] = breakpoints.find(([_, value]) => width < value);\n  return breakpoint;\n};\n\n/**\n * @returns {Breakpoint}\n */\nexport const useBreakpoint = () => {\n\n  // for ssr\n  if (typeof window === 'undefined') {\n    return Breakpoint.xxl;\n  }\n\n  const [size, setSize] = useState(() => resolveBreakpoint(window.innerWidth));\n  const setBreakpoint = () => setSize(resolveBreakpoint(window.innerWidth));\n\n  useEffect(() => {\n    const calcInnerWidth = debounce(setBreakpoint, 200);\n    window.addEventListener('resize', calcInnerWidth);\n    return () => window.removeEventListener('resize', calcInnerWidth);\n  }, []);\n\n  return new Proxy(Breakpoint, {\n    get(target, prop) {\n      if (!(prop in target)) throw new Error(`Invalid breakpoint: ${prop}`);\n      return (prop in breakpointHelpers) ? breakpointHelpers[prop](size) : size === prop;\n    },\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}