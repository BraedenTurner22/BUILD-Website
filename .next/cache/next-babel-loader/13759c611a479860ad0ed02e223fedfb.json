{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { debounce } from 'lodash';\n\n/**\n * @usage\n * import { useBreakpoint } from '@hooks/useBreakpoint';\n * const { xs, sm, md, lg, xl, xxl, smAndUp, lgAndDown } = useBreakpoint();\n * style={{ width: xs ? '100%' : '50%' }}\n * xs is a reactively changing boolean that evaluates to true if the current breakpoint is xs\n*/\n\n/**\n * @typedef {\"smAndDown\" | \"smAndUp\" | \"mdAndDown\" | \"mdAndUp\" | \"lgAndDown\" | \"lgAndUp\"} BreakpointHelper\n*/\n\n/**\n * @typedef {\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | BreakpointHelper} Breakpoint\n*/\n\n/**\n * @type {Record<Breakpoint, number>}\n * @description enum for the different breakpoint sizes\n * @example BreakpointSize.xs === 576\n */\nexport const BreakpointSize = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1440,\n  xxl: 9999\n};\n\n/**\n * @type {Record<Breakpoint, string>}\n * @description enum for the different breakpoints\n * @example Breakpoint.xs === 'xs'\n */\nexport const Breakpoint = {\n  // base props\n  xs: 'xs',\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  xxl: 'xxl',\n  // helper props\n  smAndDown: 'smAndDown',\n  smAndUp: 'smAndUp',\n  mdAndDown: 'mdAndDown',\n  mdAndUp: 'mdAndUp',\n  lgAndDown: 'lgAndDown',\n  lgAndUp: 'lgAndUp'\n};\n\n/**\n * @type {Record<BreakpointHelper, Breakpoint => boolean>}\n * @description maps helper props to their respective predicates\n */\nexport const breakpointHelpers = {\n  smAndDown: size => size === Breakpoint.xs || size === Breakpoint.sm,\n  smAndUp: size => size !== Breakpoint.xs,\n  mdAndDown: size => size === Breakpoint.xs || size === Breakpoint.sm || size === Breakpoint.md,\n  mdAndUp: size => size !== Breakpoint.xs && size !== Breakpoint.sm,\n  lgAndDown: size => size === Breakpoint.xl || size === Breakpoint.xxl,\n  lgAndUp: size => size !== Breakpoint.xl && size !== Breakpoint.xxl\n};\n\n/**\n * @param {number} width\n * @returns {Breakpoint}\n */\nconst resolveBreakpoint = width => {\n  const breakpoints = Object.entries(BreakpointSize);\n  const [breakpoint] = breakpoints.find(([_, value]) => width < value);\n  return breakpoint;\n};\n\n/**\n * @returns {Breakpoint}\n */\nexport const useBreakpoint = () => {\n  // for ssr\n  if (true) {\n    return Breakpoint.xxl;\n  }\n  const {\n    0: size,\n    1: setSize\n  } = useState(() => resolveBreakpoint(window.innerWidth));\n  const setBreakpoint = () => setSize(resolveBreakpoint(window.innerWidth));\n  useEffect(() => {\n    const calcInnerWidth = debounce(setBreakpoint, 200);\n    window.addEventListener('resize', calcInnerWidth);\n    return () => window.removeEventListener('resize', calcInnerWidth);\n  }, []);\n  return new Proxy(Breakpoint, {\n    get(target, prop) {\n      if (!(prop in target)) throw new Error(`Invalid breakpoint: ${prop}`);\n      return prop in breakpointHelpers ? breakpointHelpers[prop](size) : size === prop;\n    }\n  });\n};","map":{"version":3,"names":["useState","useEffect","debounce","BreakpointSize","xs","sm","md","lg","xl","xxl","Breakpoint","smAndDown","smAndUp","mdAndDown","mdAndUp","lgAndDown","lgAndUp","breakpointHelpers","size","resolveBreakpoint","width","breakpoints","Object","entries","breakpoint","find","_","value","useBreakpoint","setSize","window","innerWidth","setBreakpoint","calcInnerWidth","addEventListener","removeEventListener","Proxy","get","target","prop","Error"],"sources":["/Users/BraedenTurner/UMass/BUILD_UMass/BUILD-Website/src/hooks/useBreakpoint.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { debounce } from 'lodash';\n\n/**\n * @usage\n * import { useBreakpoint } from '@hooks/useBreakpoint';\n * const { xs, sm, md, lg, xl, xxl, smAndUp, lgAndDown } = useBreakpoint();\n * style={{ width: xs ? '100%' : '50%' }}\n * xs is a reactively changing boolean that evaluates to true if the current breakpoint is xs\n*/\n\n/**\n * @typedef {\"smAndDown\" | \"smAndUp\" | \"mdAndDown\" | \"mdAndUp\" | \"lgAndDown\" | \"lgAndUp\"} BreakpointHelper\n*/\n\n/**\n * @typedef {\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | BreakpointHelper} Breakpoint\n*/\n\n/**\n * @type {Record<Breakpoint, number>}\n * @description enum for the different breakpoint sizes\n * @example BreakpointSize.xs === 576\n */\nexport const BreakpointSize = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1440,\n  xxl: 9999,\n};\n\n/**\n * @type {Record<Breakpoint, string>}\n * @description enum for the different breakpoints\n * @example Breakpoint.xs === 'xs'\n */\nexport const Breakpoint = {\n\n  // base props\n  xs: 'xs',\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  xxl: 'xxl',\n\n  // helper props\n  smAndDown: 'smAndDown',\n  smAndUp: 'smAndUp',\n  mdAndDown: 'mdAndDown',\n  mdAndUp: 'mdAndUp',\n  lgAndDown: 'lgAndDown',\n  lgAndUp: 'lgAndUp',\n};\n\n/**\n * @type {Record<BreakpointHelper, Breakpoint => boolean>}\n * @description maps helper props to their respective predicates\n */\nexport const breakpointHelpers = {\n  smAndDown: (size) => size === Breakpoint.xs || size === Breakpoint.sm,\n  smAndUp: (size) => size !== Breakpoint.xs,\n  mdAndDown: (size) => size === Breakpoint.xs || size === Breakpoint.sm || size === Breakpoint.md,\n  mdAndUp: (size) => size !== Breakpoint.xs && size !== Breakpoint.sm,\n  lgAndDown: (size) => size === Breakpoint.xl || size === Breakpoint.xxl,\n  lgAndUp: (size) => size !== Breakpoint.xl && size !== Breakpoint.xxl,\n}\n\n/**\n * @param {number} width\n * @returns {Breakpoint}\n */\nconst resolveBreakpoint = (width) => {\n  const breakpoints = Object.entries(BreakpointSize);\n  const [breakpoint] = breakpoints.find(([_, value]) => width < value);\n  return breakpoint;\n};\n\n/**\n * @returns {Breakpoint}\n */\nexport const useBreakpoint = () => {\n\n  // for ssr\n  if (typeof window === 'undefined') {\n    return Breakpoint.xxl;\n  }\n\n  const [size, setSize] = useState(() => resolveBreakpoint(window.innerWidth));\n  const setBreakpoint = () => setSize(resolveBreakpoint(window.innerWidth));\n\n  useEffect(() => {\n    const calcInnerWidth = debounce(setBreakpoint, 200);\n    window.addEventListener('resize', calcInnerWidth);\n    return () => window.removeEventListener('resize', calcInnerWidth);\n  }, []);\n\n  return new Proxy(Breakpoint, {\n    get(target, prop) {\n      if (!(prop in target)) throw new Error(`Invalid breakpoint: ${prop}`);\n      return (prop in breakpointHelpers) ? breakpointHelpers[prop](size) : size === prop;\n    },\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}